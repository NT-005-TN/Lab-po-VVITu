

### Отчет по лабораторной работе №9  
## "Практическая работа с Git"

---

### **Цель работы:**
Знакомство студентов с основными операциями работы с удаленными репозиториями в Git, включая клонирование, добавление удаленных репозиториев, отправку изменений и работу с ветками на удаленном репозитории.

---

### **Ход работы:**

#### **Задание 1: Клонирование удаленного репозитория**
Для выполнения данного задания необходимо найти существующий удаленный репозиторий на платформе GitHub, GitLab или другой подобной платформе. После этого выполняется команда:
```
git clone <URL удаленного репозитория>
```
Эта команда создает копию удаленного репозитория на локальном компьютере. Для проверки успешности клонирования можно использовать команду:
```
ls
```
Которая покажет содержимое текущей директории, где должен быть создан каталог с проектом.

---

#### **Задание 2: Добавление удаленного репозитория**
Если у нас есть уже существующий локальный репозиторий, но нет связи с удаленным репозиторием, нужно добавить его командой:
```
git remote add origin <URL удаленного репозитория>
```
После добавления можно проверить список всех удаленных репозиториев командой:
```
git remote -v
```
Она выведет все добавленные удаленные репозитории вместе с их URL-адресами.

---

#### **Задание 3: Отправка изменений на удаленный репозиторий**
Чтобы отправить изменения из локального репозитория на удаленный, сначала необходимо добавить файлы в индекс командой:
```
git add .
```
Затем создать коммит:
```
git commit -m "Сообщение о коммите"
```
И наконец, отправить изменения на удаленный репозиторий:
```
git push origin <branch_name>
```
Где `<branch_name>` — это название текущей ветки (например, `main` или `master`). Проверить успешность отправки можно через веб-интерфейс выбранной платформы.

---

#### **Задание 4: Работа с ветками на удаленном репозитории**
1. **Создание новой ветки локально:**
   ```
   git checkout -b <branch_name>
   ```
   Эта команда создает новую ветку с указанным именем и сразу переключается на нее.

2. **Отправка новой ветки на удаленный репозиторий:**
   ```
   git push origin <branch_name>
   ```
   Это создаст новую ветку на удаленном репозитории.

3. **Удаление ветки из удаленного репозитория:**
   ```
   git push origin --delete <branch_name>
   ```
   Данная команда удаляет указанную ветку из удаленного репозитория.

---

#### **Задание 5: Получение изменений из удаленного репозитория**
Для получения изменений из удаленного репозитория используется команда:
```
git pull origin <branch_name>
```
Эта команда загружает последние изменения из указанной ветки удаленного репозитория и объединяет их с текущей локальной веткой. После выполнения данной команды можно проверить результат с помощью:
```
git log
```
Которая покажет историю коммитов, включая новые полученные изменения.

---

### **Ответы на вопросы для самопроверки:**

1. **Что такое система контроля версий и для чего она используется?**  
   Система контроля версий (Version Control System, VCS) — это программное обеспечение, которое позволяет отслеживать изменения в файлах с течением времени. Она используется для управления кодом, документацией и другими типами файлов, позволяя разработчикам работать совместно над проектами, возвращаться к предыдущим версиям и отслеживать историю изменений.

2. **Какие основные преимущества использования Git перед другими системами контроля версий?**  
   Основные преимущества Git:  
   - Распределенная архитектура: каждый участник имеет полную копию репозитория.  
   - Высокая производительность благодаря локальному хранению данных.  
   - Поддержка ветвления и слияния, что упрощает работу над различными функциями и исправлениями ошибок.  
   - Открытый исходный код и большая экосистема инструментов.

3. **Что такое команда "git clone" и как она используется?**  
   Команда `git clone` используется для создания копии существующего удаленного репозитория на локальный компьютер. Ее синтаксис:  
   ```
   git clone <URL удаленного репозитория>
   ```

4. **Какая команда используется для добавления файлов в индекс в Git?**  
   Для добавления файлов в индекс используется команда:
   ```
   git add <файл> или git add .
   ```
   Где `<файл>` — это путь к конкретному файлу, а `.` добавляет все измененные файлы.

5. **Как создать новую ветку в Git и что означает "ветвление" в контексте системы контроля версий?**  
   Новая ветка создается командой:
   ```
   git checkout -b <branch_name>
   ```
   Ветвление — это процесс создания новой линии разработки, которая существует параллельно с основной веткой. Это позволяет разработчикам работать над новыми функциями или исправлениями без влияния на основной код.

6. **Что означает команда "git push" и как она используется для отправки изменений на удаленный репозиторий?**  
   Команда `git push` используется для отправки локальных изменений на удаленный репозиторий. Ее синтаксис:  
   ```
   git push origin <branch_name>
   ```

7. **Как можно получить изменения из удаленного репозитория на локальный с помощью Git?**  
   Изменения можно получить командой:
   ```
   git pull origin <branch_name>
   ```
   Она загружает изменения из удаленного репозитория и автоматически объединяет их с локальной веткой.

8. **Что такое merge (слияние) в Git и какое его предназначение?**  
   Merge — это процесс объединения изменений из одной или нескольких веток в одну общую ветку. Его основное предназначение — интегрировать работу разных разработчиков или собрать результаты работы над отдельными функциями в основную кодовую базу.

9. **Какое предназначение у команды "git pull"?**  
   Команда `git pull` используется для получения изменений из удаленного репозитория и их автоматического объединения с текущей локальной веткой. Это удобный способ синхронизации локального и удаленного репозиториев.

10. **Какая команда используется для удаления ветки из удаленного репозитория в Git?**  
    Для удаления ветки из удаленного репозитория используется команда:
    `''
    git push origin --delete <branch_name>
    ```

---

### **Выводы:**
В результате выполнения данной лабораторной работы были освоены основные операции работы с удаленными репозиториями в Git, включая клонирование, добавление удаленных репозиториев, отправку изменений и работу с ветками. Эти навыки необходимы для эффективной работы в современных проектах, особенно при командной разработке программного обеспечения.
